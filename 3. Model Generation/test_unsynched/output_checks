
Hi Maxime,

Thanks for the response, I had to translate the code to a new struct in c and in the process I made some coding mistakes.

I have now corrected them (I believe). I am attaching my tests in the attached script, to check I compute the CPC and also the correlation pearson coefficient between strength sequences (real and model).

For this simulation I used the value for the french departments from your paper (and approximated value extracted from the figure) adapted to km (see the -g flag set to 4e-2 km^-1).

As for the code itself, it tries to approximate gamma using your formula, but I did not wanted to include the voronoi tesselation and all that in the code as it would make things unnecesary complicated. The user is asked to provide his own gamma value (I also changed the warning text, reminding that the actual gamma is approximated using distances in meters).


### Seq. gravity model ###
To check the accuracy of the model, I checked the CPC between my simulation and yours, between yours and the real data and between mine and the real data for the two implementations I did of your model.

Note that I provide now two implementations of your model: One called "bernouilli" which applies exactly the algorithm described in your paper, and another called "multinomial" which is much faster (does not do any rejections) and behaves as follows:

- Choses origin node at random
- Computes all the probabilties p_{ij} for all j with your formula.
- Assigns using a multinomial process of 1 trial a trip to one of the ij slots.

The two codes are asymptotically equivalent, but not exactly (despite the fact that they give equivalent results).


### Radiation model ###

As for the radiation model, I detected a few bugs, but now I am pretty confident on the code and I get 0.62 with a single run. I don't know where the difference comes from.

At first I thought that there is the fact that we use different formulas for the probabilities of the radiation model:

I use:

t_{ij} = s^out_i s^in_i / (1- s^in_i/T) * s^in_j / (s_ij + s^in_j +s^in_i ) (s_ij + s^in_j +s^in_i)

And you:
t_{ij} = s^out_i s^out_i  s^in_j / (s_ij + s^in_j +s^out_i ) (s_ij + s^in_j +s^out_i)


I have added a correction term for finite size effects that was not included in the original paper by Barabasi  (see  -->  http://www.complexcity.info/files/2013/08/BATTY-PRE-2013-A.pdf)  and also I made the approximation s^in_i = m_i, s^in_j = n_j (where n_j and m_i are defined in the original paper). You did m_i = s^out_i, n_j = s^in_j and hence the difference.


But then I changed to your formula and I still get high values of CPC (around 0.64). In both cases I compared t_{ij} from a single multinomial run with the expected value one gets from the formula referred above and I still get the same result, so I don't understand where our discrepancy comes from... maybe that you run the model with the actual values of population and I used directly the commuting data (in your paper you call that an enhanced radiation model)?



Thanks for the feedback. I am intrigued as why the CPC values between your simulation and mine are so different, despite the fact that they give very close CPC results when compared to the real data, can you attach the relevant part of your code to see if I am making something wrong?

Best,

Ula



### The scripts used for the test #####
Radiation multinomial: 	/net_non_entropy -N 94 -d 1 -e 0 -f './Test/data_maxime/strengths.str' -a './Test/data_maxime/cost_matrix.dists' -p 1 -l 0 -s 24 -g 4e-2 -v 1 -r 1
Radiation stochastic:	/net_non_entropy -N 94 -d 1 -e 1 -f './Test/data_maxime/strengths.str' -a './Test/data_maxime/cost_matrix.dists' -p 1 -l 0 -s 24 -g 4e-2 -v 1 -r 1
Seq. multinomial:		/net_non_entropy -N 94 -d 1 -e 2 -f './Test/data_maxime/strengths.str' -a './Test/data_maxime/cost_matrix.dists' -p 1 -l 0 -s 24 -g 4e-2 -v 1 -r 1
Seq. stochastic:		/net_non_entropy -N 94 -d 1 -e 3 -f './Test/data_maxime/strengths.str' -a './Test/data_maxime/cost_matrix.dists' -p 1 -l 0 -s 24 -g 4e-2 -v 1 -r 1


The results of the test:

### Radiation model ###
Mine multinomial vs reality --> R^2:0.717267 | CPC for ../data_maxime/obs.txt and ../data_ula/rad_multi.tr is : 0.62447289848479981 ###
Mine multinomial vs mine stochastic -->  R^2:0.966878 | CPC for ../data_ula/rad_multi.tr and ../data_ula/rad_stoc.tr is : 0.88359672490436936 ### (the difference steams from the fack that the in_strength sequence is not exactly conserved)
Mine stochastic vs reality -->  R^2:0.800416 | CPC for ../data_maxime/obs.txt and ../data_ula/rad_stoc.tr is : 0.66257763954954207 ###

### Sequential model ###
Mine multinomial vs reality --> R^2:0.942349 | CPC for ../data_maxime/obs.txt and ../data_ula/seq_multi.tr is : 0.77746945051798411 ###
Mine bernouilli vs reality -->  R^2:0.941895 | CPC for Test/data_ula/seq_bern2.tr and Test/data_maxime/obs.txt is : 0.77702246054172031 ###
Mine multinomial vs mine bernouilli --> R^2:0.999957 | CPC for ../data_ula/seq_bern2.tr and ../data_ula/seq_multi.tr is : 0.99263762979196646 ###
Mine bernouilli vs yours -->  R^2:0.954181 | CPC for Test/data_ula/seq_bern2.tr and Test/data_maxime/sim_SGM.txt is : 0.84022222109488309 ###
Mine multinomial vs yours --> R^2:0.954710 | CPC for ../data_maxime/sim_SGM.txt and ../data_ula/seq_multi.tr is : 0.8408335207534684 ###
Yours vs reality --> R^2:0.944632 | CPC for ../data_maxime/sim_SGM.txt and ../data_maxime/obs.txt is : 0.78586728174291143 ###




-- 
************************************* 
Oleguer Sagarra Pascual 

PhD researcher in Computational Physics. PHYSCOMP2 Complex Systems Group
Dept. Física Fonamental, University of Barcelona.
Martí i Franquès 1, 3rd Floor
ES-08028 Barcelona 
e-mails: oleguer.sagarra@gmail.com, osagarra@ffn.ub.edu
tlf: +34 617621978
************************************* 
